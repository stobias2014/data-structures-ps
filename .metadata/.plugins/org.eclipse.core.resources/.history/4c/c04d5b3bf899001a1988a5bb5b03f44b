
public class _Stack<X> {
	
	// to hold data
	private X[] data;
	// increment or decrement where I am in stack
	private int stackPointer;
	
	// initialize size of container
	public _Stack() {
		data = (X[]) new Object[1000];
		stackPointer = 0;
	}
	
	//add item to top of stack
	public void push(X item) {
		// place item at current stackPointer, then increment position
		data[stackPointer++] = item;
	}
	
	//retrieves and removes item from top of stack
	public X pop() {
		// can not remove item since no items to remove
		// can not have a negative stackPointer
		if(stackPointer == 0) {
			throw new IllegalStateException("No more items in stack");
		}
		// decrement stackPointer, then return value
		return data[--stackPointer];
	}
	
	public boolean contains(X item) {
		boolean doesContaineItem = false;
		for(int index = stackPointer; index > 0; index--) {
			if(data[index] == item) {
				doesContainItem = true;
				return true;
			} 
		}
	}
	
	public X access(X item) {
		
	}
	
}
